apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: opentelemetry
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc: 
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"
      zipkin:
        endpoint: "0.0.0.0:9411"


    processors:
      batch: 
        timeout: 60s  #增加批處理時間
        send_batch_size: 1000  #增加批量大小
      filter/ottl:
        error_mode: ignore
        traces:
          span:
            - attributes["url.path"] == "/actuator/health/readiness"
            - attributes["url.path"] == "/actuator/health/liveness"
      # k8sattributes:
      #   auth_type: 'serviceAccount'
      #   extract:
      #     metadata: # extracted from the pod
      #       - k8s.namespace.name
      #       - k8s.pod.name
      #       - k8s.pod.start_time
      #       - k8s.pod.uid
      #       - k8s.deployment.name
      #       - k8s.node.name
      #   pod_association: # How to associate the data to a pod (order matters)
      #     - sources: # First try to use the value of the resource attribute k8s.pod.ip
      #         - from: resource_attribute
      #           name: k8s.pod.ip
      #     - sources: # Then try to use the value of the resource attribute k8s.pod.uid
      #         - from: resource_attribute
      #           name: k8s.pod.uid
      #     - sources: # If neither of those work, use the request's connection to get the pod IP.
      #         - from: connection 
      transform:
          metric_statements:
          - context: resource
            statements:
              - set(attributes["service.instance.id"], attributes["host.name"])

    exporters:
      debug:
        verbosity: "detailed"
      googlecloud:
        metric:
          prefix: "custom.googleapis.com/opentelemetry/"
          resource_filters:
            - prefix: "k8s_container"
        log:
          default_log_name: "otel-logs"

    service:
      telemetry:
        logs:
          level: "debug"
      pipelines:
        traces:
          receivers: [otlp,zipkin]
          processors: [filter/ottl, batch]
          exporters: [googlecloud]
        metrics:  
          receivers: [otlp]
          processors: [transform ,batch]  
          exporters: [googlecloud]  
        logs:
          receivers: [otlp]
          exporters: [googlecloud]
